name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Haskell
      uses: haskell-actions/setup@v2
      with:
        ghc-version: '9.6.4'
        cabal-version: '3.10.2.0'
        enable-stack: false

    - name: Cache Cabal packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.cabal/packages
          ~/.cabal/store
          dist-newstyle
        key: ${{ runner.os }}-cabal-${{ hashFiles('**/*.cabal', '**/cabal.project', 'cabal.project.freeze') }}
        restore-keys: |
          ${{ runner.os }}-cabal-${{ hashFiles('**/*.cabal', '**/cabal.project') }}
          ${{ runner.os }}-cabal-

    - name: Cache test outputs
      id: cache-test-out
      uses: actions/cache@v4
      with:
        path: test-out
        key: ${{ runner.os }}-test-out-${{ hashFiles('test-grammars/**', '*.hs', '*.x', '*.y', 'makefile') }}
        restore-keys: |
          ${{ runner.os }}-test-out-

    - name: Update timestamps on cached test outputs
      run: |
        # Update timestamps to prevent Make from thinking files are out of date
        if [ -d test-out ]; then
          echo "Updating timestamps on cached test-out files..."
          find test-out -type f -exec touch {} +
        fi

    - name: Update Cabal package list
      run: cabal update

    - name: Install build tools (Alex and Happy)
      run: cabal install alex happy --installdir=$HOME/.cabal/bin --overwrite-policy=always --install-method=copy

    - name: Build project
      run: |
        export PATH="$HOME/.cabal/bin:$PATH"
        cabal build --enable-tests --enable-benchmarks -j

    - name: Run all tests
      run: |
        export PATH="$HOME/.cabal/bin:$PATH"
        echo "Running basic tests..."
        make test

        echo "Testing base grammar..."
        make test-grammar

        echo "Testing all Java files with comprehensive test suite..."
        make test-all-java

        echo "Testing Java quasi-quotations..."
        make test-java-qq

    - name: Upload test artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-output
        path: |
          test-out/
          happy_log.txt
        if-no-files-found: ignore
